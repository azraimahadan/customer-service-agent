name: Deploy to AWS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.9'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      working-directory: .
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest
    
    - name: Run tests
      working-directory: .
      env:
        STORAGE_BUCKET: test-bucket
        BEDROCK_AGENT_ID: test-agent
      run: |
        python -m pytest tests/ -v

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Install AWS CDK
      run: npm install -g aws-cdk
    
    - name: Install Python dependencies
      working-directory: .
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install web client dependencies
      working-directory: ./web_client
      run: npm install
    
    - name: Create environment file
      working-directory: ./web_client
      run: |
        cat > .env.local << 'EOF'
        NEXT_PUBLIC_API_URL=https://your-api-gateway-url.amazonaws.com/prod
        NEXT_PUBLIC_DEV_MODE=false
        EOF
    
    - name: Build web client
      working-directory: ./web_client
      env:
        CI: false
      run: npm run build
    
    - name: CDK Bootstrap (if needed)
      working-directory: .
      env:
        JSII_SILENCE_WARNING_DEPRECATED_NODE_VERSION: true
      run: cdk bootstrap
    
    - name: Deploy Backend Stacks
      working-directory: .
      env:
        JSII_SILENCE_WARNING_DEPRECATED_NODE_VERSION: true
      run: |
        cdk deploy CustomerServiceCore --require-approval never
        cdk deploy CustomerServiceML --require-approval never
        cdk deploy CustomerServiceApi --require-approval never
    
    - name: Get API Gateway URL
      working-directory: .
      id: get-api-url
      run: |
        API_URL=$(aws cloudformation describe-stacks --stack-name CustomerServiceApi --query 'Stacks[0].Outputs[?OutputKey==`ApiUrl`].OutputValue' --output text)
        echo "API_URL=$API_URL" >> $GITHUB_OUTPUT
        echo "Retrieved API URL: $API_URL"
    
    - name: Update frontend with API URL
      working-directory: ./web_client
      run: |
        cat > .env.local << EOF
        NEXT_PUBLIC_API_URL=${{ steps.get-api-url.outputs.API_URL }}
        NEXT_PUBLIC_DEV_MODE=false
        EOF
        echo "Updated .env.local with API URL: ${{ steps.get-api-url.outputs.API_URL }}"
    
    - name: Rebuild web client with API URL
      working-directory: ./web_client
      env:
        CI: false
      run: npm run build
    
    - name: Deploy Web Stack
      working-directory: .
      env:
        JSII_SILENCE_WARNING_DEPRECATED_NODE_VERSION: true
      run: cdk deploy CustomerServiceWeb --require-approval never
    
    - name: Run smoke tests
      working-directory: .
      env:
        JSII_SILENCE_WARNING_DEPRECATED_NODE_VERSION: true
      run: python scripts/smoke_test.py || echo "Smoke tests failed but continuing deployment"