{
 "Resources": {
  "CommonLayer306767A0": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "CompatibleRuntimes": [
     "python3.11"
    ],
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "6ef37214b63c2daa629ce3406e7065255c6f9f15ec895ec9f1c0bb19beb742f0.zip"
    },
    "Description": "Common dependencies for Lambda functions"
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CommonLayer/Resource",
    "aws:asset:path": "asset.6ef37214b63c2daa629ce3406e7065255c6f9f15ec895ec9f1c0bb19beb742f0",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "UploadHandlerServiceRole8CD4AA9A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/UploadHandler/ServiceRole/Resource"
   }
  },
  "UploadHandlerServiceRoleDefaultPolicy63BF30CF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "CustomerServiceCore:ExportsOutputFnGetAttStorageBucket19DB2FF8Arn891486CC"
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "CustomerServiceCore:ExportsOutputFnGetAttStorageBucket19DB2FF8Arn891486CC"
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "UploadHandlerServiceRoleDefaultPolicy63BF30CF",
    "Roles": [
     {
      "Ref": "UploadHandlerServiceRole8CD4AA9A"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/UploadHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "UploadHandler4CB020C5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "5a3df356d427f67c62b1d0500ccb7c9b9252aeaa307a6ca50675d4ca9f456f5d.zip"
    },
    "Environment": {
     "Variables": {
      "STORAGE_BUCKET": {
       "Fn::ImportValue": "CustomerServiceCore:ExportsOutputRefStorageBucket19DB2FF8E6209EFA"
      },
      "REKOGNITION_PROJECT_ARN": {
       "Fn::ImportValue": "CustomerServiceML:ExportsOutputFnGetAttRouterDetectionProjectArn041E5521"
      },
      "BEDROCK_AGENT_ID": "PLACEHOLDER_AGENT_ID"
     }
    },
    "Handler": "upload_handler.lambda_handler",
    "Layers": [
     {
      "Ref": "CommonLayer306767A0"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "UploadHandlerServiceRole8CD4AA9A",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 30
   },
   "DependsOn": [
    "UploadHandlerServiceRoleDefaultPolicy63BF30CF",
    "UploadHandlerServiceRole8CD4AA9A"
   ],
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/UploadHandler/Resource",
    "aws:asset:path": "asset.5a3df356d427f67c62b1d0500ccb7c9b9252aeaa307a6ca50675d4ca9f456f5d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "TranscribeHandlerServiceRole91A45336": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/TranscribeHandler/ServiceRole/Resource"
   }
  },
  "TranscribeHandlerServiceRoleDefaultPolicy2AAC8651": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "CustomerServiceCore:ExportsOutputFnGetAttStorageBucket19DB2FF8Arn891486CC"
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "CustomerServiceCore:ExportsOutputFnGetAttStorageBucket19DB2FF8Arn891486CC"
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TranscribeHandlerServiceRoleDefaultPolicy2AAC8651",
    "Roles": [
     {
      "Ref": "TranscribeHandlerServiceRole91A45336"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/TranscribeHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "TranscribeHandler8E4C16AC": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "a9f95be4e9e254bddd75ee3c692b5c5be63eba693a5c9f09b279c5e602498b47.zip"
    },
    "Environment": {
     "Variables": {
      "STORAGE_BUCKET": {
       "Fn::ImportValue": "CustomerServiceCore:ExportsOutputRefStorageBucket19DB2FF8E6209EFA"
      },
      "REKOGNITION_PROJECT_ARN": {
       "Fn::ImportValue": "CustomerServiceML:ExportsOutputFnGetAttRouterDetectionProjectArn041E5521"
      },
      "BEDROCK_AGENT_ID": "PLACEHOLDER_AGENT_ID"
     }
    },
    "Handler": "transcribe_handler.lambda_handler",
    "Layers": [
     {
      "Ref": "CommonLayer306767A0"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "TranscribeHandlerServiceRole91A45336",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "TranscribeHandlerServiceRoleDefaultPolicy2AAC8651",
    "TranscribeHandlerServiceRole91A45336"
   ],
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/TranscribeHandler/Resource",
    "aws:asset:path": "asset.a9f95be4e9e254bddd75ee3c692b5c5be63eba693a5c9f09b279c5e602498b47",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ImageAnalysisHandlerServiceRoleCDBA021F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/ImageAnalysisHandler/ServiceRole/Resource"
   }
  },
  "ImageAnalysisHandlerServiceRoleDefaultPolicyBCCA18B7": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "CustomerServiceCore:ExportsOutputFnGetAttStorageBucket19DB2FF8Arn891486CC"
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "CustomerServiceCore:ExportsOutputFnGetAttStorageBucket19DB2FF8Arn891486CC"
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ImageAnalysisHandlerServiceRoleDefaultPolicyBCCA18B7",
    "Roles": [
     {
      "Ref": "ImageAnalysisHandlerServiceRoleCDBA021F"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/ImageAnalysisHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ImageAnalysisHandlerB09FB8A4": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "5d804d7a9b7f1c1993a1855fc0cc3265294e40fafeb9e979d144ffc1a4343c01.zip"
    },
    "Environment": {
     "Variables": {
      "STORAGE_BUCKET": {
       "Fn::ImportValue": "CustomerServiceCore:ExportsOutputRefStorageBucket19DB2FF8E6209EFA"
      },
      "REKOGNITION_PROJECT_ARN": {
       "Fn::ImportValue": "CustomerServiceML:ExportsOutputFnGetAttRouterDetectionProjectArn041E5521"
      },
      "BEDROCK_AGENT_ID": "PLACEHOLDER_AGENT_ID"
     }
    },
    "Handler": "image_analysis_handler.lambda_handler",
    "Layers": [
     {
      "Ref": "CommonLayer306767A0"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "ImageAnalysisHandlerServiceRoleCDBA021F",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 30
   },
   "DependsOn": [
    "ImageAnalysisHandlerServiceRoleDefaultPolicyBCCA18B7",
    "ImageAnalysisHandlerServiceRoleCDBA021F"
   ],
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/ImageAnalysisHandler/Resource",
    "aws:asset:path": "asset.5d804d7a9b7f1c1993a1855fc0cc3265294e40fafeb9e979d144ffc1a4343c01",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "BedrockHandlerServiceRole4824177D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/BedrockHandler/ServiceRole/Resource"
   }
  },
  "BedrockHandlerServiceRoleDefaultPolicy5F4A95FB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "CustomerServiceCore:ExportsOutputFnGetAttStorageBucket19DB2FF8Arn891486CC"
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "CustomerServiceCore:ExportsOutputFnGetAttStorageBucket19DB2FF8Arn891486CC"
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BedrockHandlerServiceRoleDefaultPolicy5F4A95FB",
    "Roles": [
     {
      "Ref": "BedrockHandlerServiceRole4824177D"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/BedrockHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "BedrockHandler433D43D0": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "38347bda99343e60b06247ab5306945bedc3aedfd1e4d5461a046a1a7df9af24.zip"
    },
    "Environment": {
     "Variables": {
      "STORAGE_BUCKET": {
       "Fn::ImportValue": "CustomerServiceCore:ExportsOutputRefStorageBucket19DB2FF8E6209EFA"
      },
      "REKOGNITION_PROJECT_ARN": {
       "Fn::ImportValue": "CustomerServiceML:ExportsOutputFnGetAttRouterDetectionProjectArn041E5521"
      },
      "BEDROCK_AGENT_ID": "PLACEHOLDER_AGENT_ID"
     }
    },
    "Handler": "bedrock_handler.lambda_handler",
    "Layers": [
     {
      "Ref": "CommonLayer306767A0"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "BedrockHandlerServiceRole4824177D",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "BedrockHandlerServiceRoleDefaultPolicy5F4A95FB",
    "BedrockHandlerServiceRole4824177D"
   ],
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/BedrockHandler/Resource",
    "aws:asset:path": "asset.38347bda99343e60b06247ab5306945bedc3aedfd1e4d5461a046a1a7df9af24",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ActionExecutorServiceRole676E9796": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/ActionExecutor/ServiceRole/Resource"
   }
  },
  "ActionExecutorServiceRoleDefaultPolicy31EB580E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "CustomerServiceCore:ExportsOutputFnGetAttStorageBucket19DB2FF8Arn891486CC"
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "CustomerServiceCore:ExportsOutputFnGetAttStorageBucket19DB2FF8Arn891486CC"
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ActionExecutorServiceRoleDefaultPolicy31EB580E",
    "Roles": [
     {
      "Ref": "ActionExecutorServiceRole676E9796"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/ActionExecutor/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ActionExecutor3835C2EC": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "a9e5b020554a8417e2b7b78847ea9b4cd7742d1d0cf219b58da144751a46d7db.zip"
    },
    "Environment": {
     "Variables": {
      "STORAGE_BUCKET": {
       "Fn::ImportValue": "CustomerServiceCore:ExportsOutputRefStorageBucket19DB2FF8E6209EFA"
      },
      "REKOGNITION_PROJECT_ARN": {
       "Fn::ImportValue": "CustomerServiceML:ExportsOutputFnGetAttRouterDetectionProjectArn041E5521"
      },
      "BEDROCK_AGENT_ID": "PLACEHOLDER_AGENT_ID"
     }
    },
    "Handler": "action_executor.lambda_handler",
    "Layers": [
     {
      "Ref": "CommonLayer306767A0"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "ActionExecutorServiceRole676E9796",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 30
   },
   "DependsOn": [
    "ActionExecutorServiceRoleDefaultPolicy31EB580E",
    "ActionExecutorServiceRole676E9796"
   ],
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/ActionExecutor/Resource",
    "aws:asset:path": "asset.a9e5b020554a8417e2b7b78847ea9b4cd7742d1d0cf219b58da144751a46d7db",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CustomerServiceApiB26A519C": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "API for customer service troubleshooting",
    "Name": "Customer Service API"
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Resource"
   }
  },
  "CustomerServiceApiCloudWatchRole1B59907C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/CloudWatchRole/Resource"
   }
  },
  "CustomerServiceApiAccount189A0EBB": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "CustomerServiceApiCloudWatchRole1B59907C",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "CustomerServiceApiB26A519C"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Account"
   }
  },
  "CustomerServiceApiDeployment7AA63B647928e050a951969baef1de2d06673d26": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "API for customer service troubleshooting",
    "RestApiId": {
     "Ref": "CustomerServiceApiB26A519C"
    }
   },
   "DependsOn": [
    "CustomerServiceApianalyzeimageOPTIONS3F124134",
    "CustomerServiceApianalyzeimagePOST35BD505A",
    "CustomerServiceApianalyzeimage5AB884D1",
    "CustomerServiceApiexecuteactionOPTIONS86A91134",
    "CustomerServiceApiexecuteactionPOSTE7B6F87E",
    "CustomerServiceApiexecuteactionFFB1E8A9",
    "CustomerServiceApiOPTIONSA443078E",
    "CustomerServiceApitranscribeOPTIONS4F973909",
    "CustomerServiceApitranscribePOST47D3A674",
    "CustomerServiceApitranscribeCF39931B",
    "CustomerServiceApitroubleshootOPTIONSD28AB1D3",
    "CustomerServiceApitroubleshootPOSTE2ECBB81",
    "CustomerServiceApitroubleshoot64961C37",
    "CustomerServiceApiuploadOPTIONSB014A0D0",
    "CustomerServiceApiuploadPOSTD80475A8",
    "CustomerServiceApiupload13E8287F"
   ],
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Deployment/Resource"
   }
  },
  "CustomerServiceApiDeploymentStageprodF8065B7C": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "CustomerServiceApiDeployment7AA63B647928e050a951969baef1de2d06673d26"
    },
    "RestApiId": {
     "Ref": "CustomerServiceApiB26A519C"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "CustomerServiceApiAccount189A0EBB"
   ],
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/DeploymentStage.prod/Resource"
   }
  },
  "CustomerServiceApiOPTIONSA443078E": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "CustomerServiceApiB26A519C",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "CustomerServiceApiB26A519C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Default/OPTIONS/Resource"
   }
  },
  "CustomerServiceApiupload13E8287F": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CustomerServiceApiB26A519C",
      "RootResourceId"
     ]
    },
    "PathPart": "upload",
    "RestApiId": {
     "Ref": "CustomerServiceApiB26A519C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Default/upload/Resource"
   }
  },
  "CustomerServiceApiuploadOPTIONSB014A0D0": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CustomerServiceApiupload13E8287F"
    },
    "RestApiId": {
     "Ref": "CustomerServiceApiB26A519C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Default/upload/OPTIONS/Resource"
   }
  },
  "CustomerServiceApiuploadPOSTApiPermissionCustomerServiceApi5FB76A4EPOSTuploadC60D9D76": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UploadHandler4CB020C5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CustomerServiceApiB26A519C"
       },
       "/",
       {
        "Ref": "CustomerServiceApiDeploymentStageprodF8065B7C"
       },
       "/POST/upload"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Default/upload/POST/ApiPermission.CustomerServiceApi5FB76A4E.POST..upload"
   }
  },
  "CustomerServiceApiuploadPOSTApiPermissionTestCustomerServiceApi5FB76A4EPOSTuploadB8976BFE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UploadHandler4CB020C5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CustomerServiceApiB26A519C"
       },
       "/test-invoke-stage/POST/upload"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Default/upload/POST/ApiPermission.Test.CustomerServiceApi5FB76A4E.POST..upload"
   }
  },
  "CustomerServiceApiuploadPOSTD80475A8": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "UploadHandler4CB020C5",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CustomerServiceApiupload13E8287F"
    },
    "RestApiId": {
     "Ref": "CustomerServiceApiB26A519C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Default/upload/POST/Resource"
   }
  },
  "CustomerServiceApitranscribeCF39931B": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CustomerServiceApiB26A519C",
      "RootResourceId"
     ]
    },
    "PathPart": "transcribe",
    "RestApiId": {
     "Ref": "CustomerServiceApiB26A519C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Default/transcribe/Resource"
   }
  },
  "CustomerServiceApitranscribeOPTIONS4F973909": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CustomerServiceApitranscribeCF39931B"
    },
    "RestApiId": {
     "Ref": "CustomerServiceApiB26A519C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Default/transcribe/OPTIONS/Resource"
   }
  },
  "CustomerServiceApitranscribePOSTApiPermissionCustomerServiceApi5FB76A4EPOSTtranscribe887B557F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TranscribeHandler8E4C16AC",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CustomerServiceApiB26A519C"
       },
       "/",
       {
        "Ref": "CustomerServiceApiDeploymentStageprodF8065B7C"
       },
       "/POST/transcribe"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Default/transcribe/POST/ApiPermission.CustomerServiceApi5FB76A4E.POST..transcribe"
   }
  },
  "CustomerServiceApitranscribePOSTApiPermissionTestCustomerServiceApi5FB76A4EPOSTtranscribe779755BD": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TranscribeHandler8E4C16AC",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CustomerServiceApiB26A519C"
       },
       "/test-invoke-stage/POST/transcribe"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Default/transcribe/POST/ApiPermission.Test.CustomerServiceApi5FB76A4E.POST..transcribe"
   }
  },
  "CustomerServiceApitranscribePOST47D3A674": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "TranscribeHandler8E4C16AC",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CustomerServiceApitranscribeCF39931B"
    },
    "RestApiId": {
     "Ref": "CustomerServiceApiB26A519C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Default/transcribe/POST/Resource"
   }
  },
  "CustomerServiceApianalyzeimage5AB884D1": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CustomerServiceApiB26A519C",
      "RootResourceId"
     ]
    },
    "PathPart": "analyze-image",
    "RestApiId": {
     "Ref": "CustomerServiceApiB26A519C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Default/analyze-image/Resource"
   }
  },
  "CustomerServiceApianalyzeimageOPTIONS3F124134": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CustomerServiceApianalyzeimage5AB884D1"
    },
    "RestApiId": {
     "Ref": "CustomerServiceApiB26A519C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Default/analyze-image/OPTIONS/Resource"
   }
  },
  "CustomerServiceApianalyzeimagePOSTApiPermissionCustomerServiceApi5FB76A4EPOSTanalyzeimage34A0B394": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ImageAnalysisHandlerB09FB8A4",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CustomerServiceApiB26A519C"
       },
       "/",
       {
        "Ref": "CustomerServiceApiDeploymentStageprodF8065B7C"
       },
       "/POST/analyze-image"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Default/analyze-image/POST/ApiPermission.CustomerServiceApi5FB76A4E.POST..analyze-image"
   }
  },
  "CustomerServiceApianalyzeimagePOSTApiPermissionTestCustomerServiceApi5FB76A4EPOSTanalyzeimageD187D36D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ImageAnalysisHandlerB09FB8A4",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CustomerServiceApiB26A519C"
       },
       "/test-invoke-stage/POST/analyze-image"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Default/analyze-image/POST/ApiPermission.Test.CustomerServiceApi5FB76A4E.POST..analyze-image"
   }
  },
  "CustomerServiceApianalyzeimagePOST35BD505A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ImageAnalysisHandlerB09FB8A4",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CustomerServiceApianalyzeimage5AB884D1"
    },
    "RestApiId": {
     "Ref": "CustomerServiceApiB26A519C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Default/analyze-image/POST/Resource"
   }
  },
  "CustomerServiceApitroubleshoot64961C37": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CustomerServiceApiB26A519C",
      "RootResourceId"
     ]
    },
    "PathPart": "troubleshoot",
    "RestApiId": {
     "Ref": "CustomerServiceApiB26A519C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Default/troubleshoot/Resource"
   }
  },
  "CustomerServiceApitroubleshootOPTIONSD28AB1D3": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CustomerServiceApitroubleshoot64961C37"
    },
    "RestApiId": {
     "Ref": "CustomerServiceApiB26A519C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Default/troubleshoot/OPTIONS/Resource"
   }
  },
  "CustomerServiceApitroubleshootPOSTApiPermissionCustomerServiceApi5FB76A4EPOSTtroubleshootFE435CEA": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "BedrockHandler433D43D0",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CustomerServiceApiB26A519C"
       },
       "/",
       {
        "Ref": "CustomerServiceApiDeploymentStageprodF8065B7C"
       },
       "/POST/troubleshoot"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Default/troubleshoot/POST/ApiPermission.CustomerServiceApi5FB76A4E.POST..troubleshoot"
   }
  },
  "CustomerServiceApitroubleshootPOSTApiPermissionTestCustomerServiceApi5FB76A4EPOSTtroubleshoot128CB64F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "BedrockHandler433D43D0",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CustomerServiceApiB26A519C"
       },
       "/test-invoke-stage/POST/troubleshoot"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Default/troubleshoot/POST/ApiPermission.Test.CustomerServiceApi5FB76A4E.POST..troubleshoot"
   }
  },
  "CustomerServiceApitroubleshootPOSTE2ECBB81": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "BedrockHandler433D43D0",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CustomerServiceApitroubleshoot64961C37"
    },
    "RestApiId": {
     "Ref": "CustomerServiceApiB26A519C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Default/troubleshoot/POST/Resource"
   }
  },
  "CustomerServiceApiexecuteactionFFB1E8A9": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CustomerServiceApiB26A519C",
      "RootResourceId"
     ]
    },
    "PathPart": "execute-action",
    "RestApiId": {
     "Ref": "CustomerServiceApiB26A519C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Default/execute-action/Resource"
   }
  },
  "CustomerServiceApiexecuteactionOPTIONS86A91134": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CustomerServiceApiexecuteactionFFB1E8A9"
    },
    "RestApiId": {
     "Ref": "CustomerServiceApiB26A519C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Default/execute-action/OPTIONS/Resource"
   }
  },
  "CustomerServiceApiexecuteactionPOSTApiPermissionCustomerServiceApi5FB76A4EPOSTexecuteaction84B0BAFD": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ActionExecutor3835C2EC",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CustomerServiceApiB26A519C"
       },
       "/",
       {
        "Ref": "CustomerServiceApiDeploymentStageprodF8065B7C"
       },
       "/POST/execute-action"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Default/execute-action/POST/ApiPermission.CustomerServiceApi5FB76A4E.POST..execute-action"
   }
  },
  "CustomerServiceApiexecuteactionPOSTApiPermissionTestCustomerServiceApi5FB76A4EPOSTexecuteaction57DFA89D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ActionExecutor3835C2EC",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CustomerServiceApiB26A519C"
       },
       "/test-invoke-stage/POST/execute-action"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Default/execute-action/POST/ApiPermission.Test.CustomerServiceApi5FB76A4E.POST..execute-action"
   }
  },
  "CustomerServiceApiexecuteactionPOSTE7B6F87E": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ActionExecutor3835C2EC",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CustomerServiceApiexecuteactionFFB1E8A9"
    },
    "RestApiId": {
     "Ref": "CustomerServiceApiB26A519C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CustomerServiceApi/Default/execute-action/POST/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WQTW6DMBCFz5K9caGcgKTqqlURkbqNJmZKJoCNmLEQQty9skNVsnrf+L35kV91lqY6PcDEianbpKOrXs4CplUw8WXpoL/WoJcPmHH8xpHJWXX6sU/1u7dGNmPPJY49cYisivMLMKOwLoIozvXRmxblCIyKoNdL5ToMbVFL15GZ45RIq4KBGhCcYNZLhSzFQDH9j4UxzltRbzh0bu7RSnjdVWeBJq54QIXs/GgwnvCJcnN1MDf6c7clkddVxfNDP9nmKfPlZfCyTwc+OVuTxC8oZ7k5+5LrLNNZfrgzUTJ6K9Sjrh76C0xV//CPAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "CustomerServiceApi/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "CustomerServiceApiEndpointDEA50B40": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "CustomerServiceApiB26A519C"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "CustomerServiceApiDeploymentStageprodF8065B7C"
      },
      "/"
     ]
    ]
   }
  },
  "ApiUrl": {
   "Description": "API Gateway URL",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "CustomerServiceApiB26A519C"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "CustomerServiceApiDeploymentStageprodF8065B7C"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}